.wrapper {
  composes: clearfix from "shared/styles/helpers.css";

  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  border-top: 1px solid color(black alpha(5%));
  background-color: color(white alpha(95%));
}

.toggle {
  composes: clearfix from "shared/styles/helpers.css";

  position: absolute;
  z-index: 2;
  top: 0.5rem;
  right: 0.5rem;
  height: 1em;
  min-height: 1em;
  margin: 0;
  font-size: 1.5em;
  color: color(black alpha(30%));
  cursor: pointer;
  transition: color 0.3s;

  &:hover {
    color: color(black alpha(100%));
  }

  &:active,
  &:focus {
    outline: none;
  }
}

.toggleOpen {
  composes: slack from "shared/styles/icons.css";
}

.toggleClose {
  composes: close from "shared/styles/icons.css";
}

.toggleText {
  composes: hideText from "shared/styles/helpers.css";
}

.container {
  max-width: 65rem;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.input {
  width: 100%;
  color: gray;
  border-bottom: 1px solid lightgray;
  transition: border 0.3s, color 0.3s;

  &:active,
  &:focus {
    outline: none;
    color: black;
    border-bottom-color: gray;
  }
}

.messageListWrapper {
  position: relative;

  &::before,
  &::after {
    content: ' ';
    position: absolute;
    z-index: 1;
    left: 0;
    right: 0;
    height: 0.5rem;
  }

  &::before {
    top: -1px;
    background:
      linear-gradient(
        to bottom,
        color(white alpha(95%)),
        color(white alpha(0%))
      );
  }

  &::after {
    bottom: -1px;
    background:
      linear-gradient(
        to bottom,
        color(white alpha(0%)),
        color(white alpha(100%))
      );
  }
}

.messageList {
  margin: 0;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.5s;
}

.messageListOpen {
  max-height: 25vh;
  overflow-y: auto;
}

.message {
  transition: opacity 0.5s, transform 0.5s ease-out;

  &:first-of-type { margin-top: 0.5rem; }
  &:last-of-type { margin-bottom: 0.5rem; }

  &.messageAppear {
    will-change: opacity;
    opacity: 0;
  }

  &.messageAppearActive {
    opacity: 1;
  }

  &.messageEnter {
    will-change: opacity, transform;
    opacity: 0;
    transform: translateX(-100%);
  }

  &.messageEnterActive {
    opacity: 1;
    transform: translateX(0);
  }

  &.messageLeave {
    will-change: opacity, transform;
  }

  &.messageLeaveActive {
    opacity: 0;
    transform: translate(-100%);
  }
}

.messageEdited {
  color: color(black lightness(75%));
}
